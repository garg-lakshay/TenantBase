// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant{
  id         String        @id@default(cuid())
  name       String
  domain     String?
  plan       Plan          @default(FREE)
  members    Membership[]
  projects   Project[]

  createdAt  DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model User{
  id          String        @id@default(cuid())
  name        String
  email       String        @unique
  password    String
  tasks       Task[]        @relation("TaskAssignee")
  memberships Membership[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Project{
  id         String        @id@default(cuid())
  name       String         
  tasks      Task[]
  tenant     Tenant        @relation(fields:[tenantId], references: [id])
  tenantId   String

  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

}

model Task{
  id          String         @id @default(cuid())
  title       String       
  description String 
  status      String         @default("todo")  
  project     Project        @relation(fields: [projectId], references: [id])
  projectId   String
  assignee    User?          @relation("TaskAssignee", fields: [assigneeId], references: [id])
  assigneeId  String?
         

  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

}

model Membership{
  id          String         @id @default(cuid())
  role        Role
  tenant      Tenant         @relation(fields: [tenantId],references: [id])
  tenantId    String         
   user      User      @relation(fields: [userId], references: [id])
  userId    String

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([tenantId, userId]) // Prevent duplicate memberships
}

enum Role {
  ADMIN
  MEMBER
}

enum Plan {
  FREE
  PREMIUM
  ENTERPRISE
}





